[{"path":"/dev/Readme.html","id":null,"dir":"","previous_headings":"","what":"clinfun","title":"clinfun","text":"Utilities make clinical collaborations easier fun. contains functions designing studies Simon 2-stage group sequential designs data analysis Jonckheere-Terpstra test estimating survival quantiles.","code":""},{"path":"/dev/Readme.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"clinfun","text":"can install released version clinfun CRAN : development version GitHub :","code":"install.packages(\"clinfun\") # install.packages(\"devtools\") devtools::install_github(\"veseshan/clinfun\")"},{"path":"/dev/Readme.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"clinfun","text":"basic example shows calculate CPS Fisher’s exact sample sizes power estimates given response rates standard experiment groups.","code":"library(clinfun)  fe.ssize(p1 = .8,          p2 = .2,          alpha=0.05,          power=0.8) #>              Group 1 Group 2 Exact Power #> CPS               13      13   0.8688275 #> Fisher Exact      12      12   0.8115276"},{"path":"/dev/articles/clinical-trial-functions.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Functions For Clinical Trial Design","text":"vignette walks functions {clinfun} facilitate design clinical trials. Examples using published clinical trials included illustrate use functions real-world context. begin, install load {clinfun}:","code":"library(clinfun)"},{"path":"/dev/articles/clinical-trial-functions.html","id":"phase-ii-trial-design","dir":"Articles","previous_headings":"","what":"Phase II Trial Design","title":"Functions For Clinical Trial Design","text":"overall purpose phase II research determine whether treatment promising enough warrant extensive development. phase research assesses safety clinical pharmacology, phase II research begins assessing efficacy treatment well-defined population, continuing monitor safety treatment. {clinfun} enables users construct two common phase II trial designs, Simon’s two-stage single-stage, described detail .","code":""},{"path":"/dev/articles/clinical-trial-functions.html","id":"simons-two-stage","dir":"Articles","previous_headings":"Phase II Trial Design","what":"Simon’s Two-Stage","title":"Functions For Clinical Trial Design","text":"goal Simon’s two-stage design assess efficacy treatment minimizing number patients exposed ineffective treatment. trial begins enrolling \\(n_1\\) patients stage 1. \\(\\leq r_1\\) responses observed, early termination occurs, point treatment recommended. Otherwise, \\(n_2\\) patients enrolled stage 2 success treatment based data accumulated. end stage 2, \\(\\leq r\\) responses observed total, treatment recommended; \\(>r\\) responses observed total, treatment recommended. designing Simon’s two-stage trial, key objective determine appropriate response threshold sample size values, indicated : \\(r_1\\): Response threshold end stage 1 \\(r\\): Final response threshold \\(n_1\\): Stage 1 sample size \\(n\\): Total sample size (\\(n_1 + n_2\\))","code":""},{"path":"/dev/articles/clinical-trial-functions.html","id":"design-parameters-and-constraints","dir":"Articles","previous_headings":"Phase II Trial Design > Simon’s Two-Stage","what":"Design Parameters and Constraints","title":"Functions For Clinical Trial Design","text":"order determine final design components, following parameters constraints must specified: \\(p_0\\) (pu): Treatment response rate considered unacceptable \\(p_1\\) (pa): Treatment response rate considered desirable \\(\\alpha\\) (ep1): Type error threshold \\(\\beta\\) (ep2): Type II error threshold final design components depend response rates considered “unacceptable” (\\(p_0\\)) “desirable” (\\(p_1\\)) must satisfy desired error rate constraints (\\(\\alpha\\), \\(\\beta\\)) testing following hypotheses: \\(H_0\\): true treatment response rate less equal unacceptable level (\\(p \\leq p_0\\)) \\(H_1\\): true treatment response rate greater equal desirable level (\\(p \\geq p_1\\))","code":""},{"path":"/dev/articles/clinical-trial-functions.html","id":"optimal-vs--minimax-vs--admissible-designs","dir":"Articles","previous_headings":"Phase II Trial Design > Simon’s Two-Stage","what":"Optimal vs. Minimax vs. Admissible Designs","title":"Functions For Clinical Trial Design","text":"design parameters constraints provided, {clinfun} determines final design components based three different approaches: optimal, minimax, admissible. early termination occurs, sample size trial \\(n_1\\). early termination occur, sample size trial \\(n\\) (maximum sample size trial). Thus, expected sample size null hypothesis given \\[ EN(p_0) = n_1 + (1 - PET(p_0)) \\cdot n_2 \\] \\(PET(p_0)\\) probability early termination null hypothesis. optimal design minimizes expected sample size (\\(EN(p_0)\\)), whereas minimax design minimizes maximum sample size (\\(n_1 + n_2\\)). optimal design typically smaller stage 1 sample size subjects overall trial proceeds stage 2. optimal design also typically higher \\(PET(p_0)\\) minimax design. minimax design can preferable certain scenarios: example, \\(EN(p_0)\\) relatively close optimal design patient accrual rate slow, patient population heterogeneous small stage 1 desirable. admissible design can thought compromise optimal minimax designs based Bayesian decision-theoretic criterion.","code":""},{"path":"/dev/articles/clinical-trial-functions.html","id":"levatinib-phase-ii-trial-example","dir":"Articles","previous_headings":"Phase II Trial Design > Simon’s Two-Stage","what":"Levatinib Phase II Trial Example","title":"Functions For Clinical Trial Design","text":"example, looking phase II trial assessed efficacy lenvatinib patients progressive, recurrent metastatic adenoid cystic carcinoma (Tchekmedyian et al., 2019). Patients received lenvatinib 24 mg/day. Treatment continued disease progression, death, unacceptable toxicity, withdrawal consent, decision based treating physician’s discretion. Treatment response specifically defined overall response: achievement either partial response complete response, defined Response Evaluation Criteria Solid Tumors (RECIST) version 1.1. trial employed Simon’s two-stage design. overall response rate 5% considered unacceptable, overall response rate 20% considered desirable. type error threshold used 10%. target power used 90%, equivalent 10% type II error threshold. Summarizing design parameters constraints , : \\(p_0\\) (pu): 5% overall response rate \\(p_1\\) (pa): 20% overall response rate \\(\\alpha\\) (ep1): 10% type error threshold \\(\\beta\\) (ep2): 10% type II error threshold Thus, hypotheses used testing : \\(H_0\\): true overall response rate less equal 5% (\\(p \\leq 0.05\\)) \\(H_1\\): true overall response rate greater equal 20% (\\(p \\geq 0.2%\\)) Now, using ph2simon(), specify parameters print resulting object. output provides key components (\\(r_1\\), \\(r\\), \\(n_1\\), \\(n\\)) well \\(EN(p_0)\\) \\(PET(p_0)\\) selected optimal minimax designs (shown first second rows, respectively). expected, optimal design smaller expected sample size (\\(EN(p_0)\\); 23 vs. 26), whereas minimax design smaller maximum sample size (\\(n\\); 32 vs. 37). can also visualize results. Using base plot(), plot trial object.  output provides visual representation maximum number patients (\\(n\\)) expected sample size (\\(EN(p_0)\\)) various scenarios. O represents optimal design, M represents minimax design. admissible design can obtained applying twostage.admissible() function trial object. output includes admissible design well optimal minimax designs. addition design components seen earlier, columns qLo qHi give range probability values particular design admissible. particular trial, Tchekmedyian et al. opted minimax design. Thus, 18 patients enrolled stage 1 (\\(n_1 = 18\\)). responses observed (\\(\\leq 0\\) reduces \\(= 0\\) since number responses negative), early termination occur. Otherwise, least one response observed, 14 patients enrolled stage 2 (\\(n_2 = n - n_1 = 32 - 18 = 14\\)). end stage 2, least 4 responses observed total, treatment recommended; 3 fewer responses observed total, treatment recommended (\\(r = 3\\)). Ultimately, Tchekmedyian et al. observed four responses among 18 patients enrolled stage 1 thus proceeded stage 2, additional 14 patients enrolled. One response observed among stage 2 patients. Thus, end trial, 5 responses observed total, lenvatinib recommended development patients progressive, recurrent metastatic adenoid cystic carcinoma.","code":"# Specify the parameters and constraints trial = ph2simon(0.05, 0.2, 0.1, 0.1)  # Print trial #>  #>  Simon 2-stage Phase II design  #>  #> Unacceptable response rate:  0.05  #> Desirable response rate:  0.2  #> Error rates: alpha =  0.1 ; beta =  0.1  #>  #>         r1 n1 r  n EN(p0) PET(p0) #> Optimal  0 12 3 37  23.49  0.5404 #> Minimax  0 18 3 32  26.44  0.3972 # Plot plot(trial) # Obtain admissible design twostage.admissible(trial) #>            r1 n1 r  n   EN(p0)   PET(p0)   qLo   qHi #> Minimax     0 18 3 32 26.43900 0.3972143 0.640 1.000 #> Admissible  0 15 3 33 24.66076 0.4632912 0.323 0.640 #> Admissible  0 13 3 35 23.70647 0.5133421 0.097 0.323 #> Optimal     0 12 3 37 23.49100 0.5403601 0.000 0.097"},{"path":"/dev/articles/clinical-trial-functions.html","id":"references","dir":"Articles","previous_headings":"Phase II Trial Design > Simon’s Two-Stage","what":"References","title":"Functions For Clinical Trial Design","text":"Simon R. (1989). Optimal Two-Stage Designs Phase II Clinical Trials. Controlled Clinical Trials 10, 1-10. Jung SH, Carey M Kim KM. (2001). Graphical Search Two-Stage Designs Phase II Clinical Trials. Controlled Clinical Trials 22, 367-372. Jung SH, Lee T, Kim K, George, SL. (2004). Admissible two-stage designs phase II cancer clinical trials. Statistics medicine 23(4), 561-569. Tchekmedyian V, Sherman EJ, Dunn L, et al. (2019) Phase II Study Lenvatinib Patients Progressive, Recurrent Metastatic Adenoid Cystic Carcinoma. J Clin Oncol. 37(18):1529-1537.","code":""},{"path":"/dev/articles/clinical-trial-functions.html","id":"single-stage","dir":"Articles","previous_headings":"Phase II Trial Design","what":"Single-Stage","title":"Functions For Clinical Trial Design","text":"single-stage design may used instead two-stage design endpoint requires much time evaluate early stopping less priority. trial enrolls \\(n\\) patients. patients completed study, \\(\\leq r\\) responses observed total, treatment recommended; \\(>r\\) responses observed total, treatment recommended. designing single-stage trial, key objective select appropriate values \\(n\\) (sample size) \\(r\\) (response threshold end study). response rate considered “unacceptable” (point treatment recommended) response rate considered “desirable” must specified, values \\(r\\) \\(n\\) must selected desired error rate constraints satisfied.","code":""},{"path":"/dev/articles/clinical-trial-functions.html","id":"design-parameters-and-constraints-1","dir":"Articles","previous_headings":"Phase II Trial Design > Single-Stage","what":"Design Parameters and Constraints","title":"Functions For Clinical Trial Design","text":"order determine final design components, following parameters constraints must specified: \\(p_0\\) (pu): Treatment response rate considered unacceptable \\(p_1\\) (pa): Treatment response rate considered desirable \\(\\alpha\\) (ep1): Type error threshold \\(\\beta\\) (ep2): Type II error threshold final design components depend response rates considered “unacceptable” (\\(p_0\\)) “desirable” (\\(p_1\\)) must satisfy desired error rate constraints (\\(\\alpha\\), \\(\\beta\\)) testing following hypotheses: \\(H_0\\): true treatment response rate less equal unacceptable level (\\(p \\leq p_0\\)) \\(H_1\\): true treatment response rate greater equal desirable level (\\(p \\geq p_1\\))","code":""},{"path":"/dev/articles/clinical-trial-functions.html","id":"example","dir":"Articles","previous_headings":"Phase II Trial Design > Single-Stage","what":"Example","title":"Functions For Clinical Trial Design","text":"example, looking phase II trial assessed efficacy everolimus patients thymoma thymic carcinoma previously treated cisplatin-based chemotherapy (Zucali et al., 2018). Patients received everolimus 10 mg/day. Treatment continued disease progression, death, unacceptable toxicity, study discontinuation reason. Treatment response specifically defined disease control: achievement either partial response, complete response, stable disease, defined Response Evaluation Criteria Solid Tumors (RECIST) version 1.1. trial employed single-stage design. disease control rate 40% considered unacceptable, disease control rate 60% considered desirable. type error threshold used 10%. target power used 90%, equivalent 10% type II error threshold. Summarizing design parameters constraints , : \\(p_0\\) (pu): 40% disease control rate \\(p_1\\) (pa): 60% disease control rate \\(\\alpha\\) (ep1): 10% type error threshold \\(\\beta\\) (ep2): 10% type II error threshold Thus, hypotheses used testing : \\(H_0\\): true disease control rate less equal 40% (\\(p \\leq 0.4\\)) \\(H_1\\): true disease control rate greater equal 60% (\\(p \\geq 0.6%\\)) Using ph2single(), specify parameters print resulting object. output provides key components (\\(n\\) \\(r\\)) applicable designs well type type II error rates corresponding designs. Zucali et al. chose first option listed, design enrolls smallest number patients (\\(n = 41\\)) still satisfies error rate constraints. treatment recommended least 21 first 41 evaluable patients achieved disease control (\\(r = 20\\)). Ultimately, greater 21 patients achieved disease control, everolimus recommended development patients thymoma thymic carcinoma previously treated cisplatin-based chemotherapy.","code":"# Specify the parameters and constraints & print ph2single(0.4, 0.6, 0.1, 0.1) #>    n  r Type I error Type II error #> 1 41 20   0.09651722    0.09651722 #> 2 43 21   0.09132412    0.09132412 #> 3 45 22   0.08645205    0.08645205 #> 4 47 23   0.08187654    0.08187654 #> 5 49 24   0.07757556    0.07757556"},{"path":"/dev/articles/clinical-trial-functions.html","id":"references-1","dir":"Articles","previous_headings":"Phase II Trial Design > Single-Stage","what":"References","title":"Functions For Clinical Trial Design","text":"Zucali PA, De Pas T, Palmieri G, et al. (2018). Phase II Study Everolimus Patients Thymoma Thymic Carcinoma Previously Treated Cisplatin-Based Chemotherapy. J Clin Oncol. 36(4):342-349.","code":""},{"path":[]},{"path":"/dev/articles/clinical-trial-functions.html","id":"fishers-exact-test","dir":"Articles","previous_headings":"Calculating Sample Size, Effect Size, and Power","what":"Fisher’s Exact Test","title":"Functions For Clinical Trial Design","text":"{clinfun} offers set functions determine sample sizes, effect sizes, power based Fisher’s exact tests. table summarizing functions based Fisher’s exact test.","code":""},{"path":"/dev/articles/clinical-trial-functions.html","id":"example-1","dir":"Articles","previous_headings":"Calculating Sample Size, Effect Size, and Power > Fisher’s Exact Test","what":"Example","title":"Functions For Clinical Trial Design","text":"CAUTION: can see , use base R power.prop.test(), obtain incorrect result due normal approximation.","code":"fe.ssize(p1 = 0.2, p2 = 0.3, power = 0.8) #>              Group 1 Group 2 Exact Power #> CPS              313     313   0.8018729 #> Fisher Exact     311     311   0.8004486 power.prop.test(p1 = 0.2, p2 = 0.3, power = 0.8) #>  #>      Two-sample comparison of proportions power calculation  #>  #>               n = 293.1513 #>              p1 = 0.2 #>              p2 = 0.3 #>       sig.level = 0.05 #>           power = 0.8 #>     alternative = two.sided #>  #> NOTE: n is number in *each* group"},{"path":"/dev/articles/clinical-trial-functions.html","id":"references-2","dir":"Articles","previous_headings":"Calculating Sample Size, Effect Size, and Power > Fisher’s Exact Test","what":"References","title":"Functions For Clinical Trial Design","text":"Casagrande JT, Pike MC, Smith PG. (1978). improved approximate formula calculating sample sizes comparing two binomial distributions. Biometrics 34, 483-486. Fleiss, JL. (1981). Statistical Methods Rates Proportions. Schlesselman JJ. (1987) Re: Smallest detectable relative risk multiple controls per case. J Epidemiol 125(2), 348.","code":""},{"path":"/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Venkatraman E. Seshan. Author, maintainer. Karissa Whiting. Author.","code":""},{"path":"/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Seshan V, Whiting K (2023). clinfun: Clinical Trial Design Data Analysis Functions. R package version 1.1.1.9101.","code":"@Manual{,   title = {clinfun: Clinical Trial Design and Data Analysis Functions},   author = {Venkatraman E. Seshan and Karissa Whiting},   year = {2023},   note = {R package version 1.1.1.9101}, }"},{"path":"/dev/index.html","id":"clinfun","dir":"","previous_headings":"","what":"Clinical Trial Design and Data Analysis Functions","title":"Clinical Trial Design and Data Analysis Functions","text":"Utilities make clinical collaborations easier fun. contains functions designing studies Simon 2-stage group sequential designs data analysis Jonckheere-Terpstra test estimating survival quantiles.","code":""},{"path":"/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Clinical Trial Design and Data Analysis Functions","text":"can install released version clinfun CRAN : development version GitHub :","code":"install.packages(\"clinfun\") # install.packages(\"devtools\") devtools::install_github(\"veseshan/clinfun\")"},{"path":"/dev/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Clinical Trial Design and Data Analysis Functions","text":"basic example shows calculate CPS Fisher’s exact sample sizes power estimates given response rates standard experiment groups.","code":"library(clinfun)  fe.ssize(p1 = .8,          p2 = .2,          alpha=0.05,          power=0.8) #>              Group 1 Group 2 Exact Power #> CPS               13      13   0.8688275 #> Fisher Exact      12      12   0.8115276"},{"path":"/dev/reference/ROCanalysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions to plot and compare ROC curves. — ROCanalysis","title":"Functions to plot and compare ROC curves. — ROCanalysis","text":"functions can used nonparametric analysis ROC curves.","code":""},{"path":"/dev/reference/ROCanalysis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Functions to plot and compare ROC curves. — ROCanalysis","text":"relevant functions roc.curve, roc.area.test   roc.perm.test.  See individual functions usage details.","code":""},{"path":"/dev/reference/aucVardiTest.html","id":null,"dir":"Reference","previous_headings":"","what":"Two-Sample Tests for Growth Curves under Dependent Right Censoring — aucVardiTest","title":"Two-Sample Tests for Growth Curves under Dependent Right Censoring — aucVardiTest","text":"Permutation test comparing growth curves across tow groups   dependent right censoring.","code":""},{"path":"/dev/reference/aucVardiTest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Two-Sample Tests for Growth Curves under Dependent Right Censoring — aucVardiTest","text":"","code":"aucVardiTest(meas, grp, tim=NULL, cgrps=NULL, nperm=5000)"},{"path":"/dev/reference/aucVardiTest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Two-Sample Tests for Growth Curves under Dependent Right Censoring — aucVardiTest","text":"meas Matrix measurements rows subjects     columns timepoints. least one value missing     row. example can tumor sizes measured time. grp Group indicator subject. must least     two different groups. can represent subject's treatment. tim Times measurements meas taken.     missing, times set 1 ncol(meas). cgrps two groups compared. missing     first two groups compared. nperm Number permutations reference distribution.","code":""},{"path":"/dev/reference/aucVardiTest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Two-Sample Tests for Growth Curves under Dependent Right Censoring — aucVardiTest","text":"returns list objects ostat, pstat p.value   observed test statistic two groups compared, values   statistics group labels permuted","code":""},{"path":"/dev/reference/aucVardiTest.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Two-Sample Tests for Growth Curves under Dependent Right Censoring — aucVardiTest","text":"test statistic defined sum pairwise differences   partial areas growth curve. pair subjects   partial area computed smaller maximum followup   times. subject, linear interpolation used fill-  missing values prior maximum followup time. reference   distribution obtained permuting group labels.","code":""},{"path":"/dev/reference/aucVardiTest.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Two-Sample Tests for Growth Curves under Dependent Right Censoring — aucVardiTest","text":"Vardi Y., Ying Z. Zhang C.H. (2001). Two-Sample Tests Growth   Curves Dependent Right Censoring. Biometrika 88, 949-960.","code":""},{"path":"/dev/reference/aucVardiTest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Two-Sample Tests for Growth Curves under Dependent Right Censoring — aucVardiTest","text":"","code":"grp <- sample(1:3, 100, replace=TRUE)   grp0 <- LETTERS[grp]   maxfup <- sample(5:20, 100, replace=TRUE)   meas <- matrix(NA, 100, 20)   for(i in 1:100) {     meas[i, 1:maxfup[i]] <- cumsum((3+0.04*grp[i]) + rnorm(maxfup[i]))   }   aucVardiTest(meas, grp) #> statistic for 2 - 1  =  6191.192 ; p-value =  0.2713457    aucVardiTest(meas, grp0, cgrps=c(\"C\",\"B\")) #> statistic for B - C  =  -374.3075 ; p-value =  0.9184163"},{"path":"/dev/reference/calogrank.html","id":null,"dir":"Reference","previous_headings":"","what":"Survival curves analysis of covariance — calogrank","title":"Survival curves analysis of covariance — calogrank","text":"Logrank test compare survival curves adjusting covariates","code":""},{"path":"/dev/reference/calogrank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival curves analysis of covariance — calogrank","text":"","code":"calogrank(ftime, fstatus, grp, cvt, strat=NULL)"},{"path":"/dev/reference/calogrank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survival curves analysis of covariance — calogrank","text":"ftime failure times fstatus status indicator grp group indicator cvt continuous covariates used adjusted analysis strat stratification variable","code":""},{"path":"/dev/reference/calogrank.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Survival curves analysis of covariance — calogrank","text":"calogrank covariate adjusted version k-sample survdiff.    function current form basic error checking.","code":""},{"path":"/dev/reference/calogrank.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Survival curves analysis of covariance — calogrank","text":"Heller G. Venkatraman E.S. (2004) nonparametric test compare   survival distributions covariate adjustment. JRSS-B 66,   719-733.","code":""},{"path":"/dev/reference/calogrank.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Survival curves analysis of covariance — calogrank","text":"","code":"if (FALSE)   library(survival)   data(pbc) #> Warning: data set ‘pbc’ not found   pbc1 <- pbc #> Error in eval(expr, envir, enclos): object 'pbc' not found   pbc1$trt[pbc1$trt == -9] <- NA #> Error in pbc1$trt[pbc1$trt == -9] <- NA: object 'pbc1' not found   pbc1$copper[pbc1$copper == -9] <- NA #> Error in pbc1$copper[pbc1$copper == -9] <- NA: object 'pbc1' not found   calogrank(pbc1$time, pbc1$status, pbc1$trt, pbc1[,c(\"copper\")]) #> Loading required namespace: survival #> Error in calogrank(pbc1$time, pbc1$status, pbc1$trt, pbc1[, c(\"copper\")]): object 'pbc1' not found   calogrank(pbc1$time, pbc1$status, pbc1$trt,                                   pbc1[,c(\"protime\", \"copper\")]) #> Error in calogrank(pbc1$time, pbc1$status, pbc1$trt, pbc1[, c(\"protime\",     \"copper\")]): object 'pbc1' not found"},{"path":"/dev/reference/clinfun-internal.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal clinfun functions — clinfun-internal","title":"Internal clinfun functions — clinfun-internal","text":"Internal functions used functions package.","code":""},{"path":"/dev/reference/clinfun-internal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal clinfun functions — clinfun-internal","text":"","code":"compareROC.paired(x,y,d,nperm=2500) compareROC.unpaired(x, dx, y, dy, nperm=2500, mp=NULL) exactNull(gsize, kw) getBoundary(pLo, pHi, n, cP0=0.1, cP1=0.9, ngrid=6, niter=10, delta=0,     priorityNull=TRUE)  gsd.bdryconstant(ifrac, eprob = 0.05, delta = 0.5,     alternative = c(\"two.sided\", \"one.sided\"), tol = 0.00001, ...) gsd.drift.efficacy(ifrac, delta.eb, sig.level=0.05, pow = 0.8,     alternative = c(\"two.sided\", \"one.sided\"), tol = 0.00001, ...) gsd.drift.both(ifrac, delta.eb, delta.fb, sig.level = 0.05, pow=0.8,     alternative = c(\"two.sided\", \"one.sided\"), tol = 0.00001, ...) gsd.drift(ifrac, sig.level = 0.05, pow = 0.8, delta.eb = 0.5, delta.fb = NULL,     alternative = c(\"two.sided\", \"one.sided\"), tol = 0.00001, ...) mrcobj(coefs, xmat, n, nn) smmrcobj(coefs, xmat, n, nn, bw) rocauc(marker, n, nn) smrocauc(marker, n, nn)"},{"path":"/dev/reference/clinfun-internal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Internal clinfun functions — clinfun-internal","text":"functions called user.","code":""},{"path":"/dev/reference/coxphCPE.html","id":null,"dir":"Reference","previous_headings":"","what":"Gonen \\& Heller Concordance Probability Estimate — coxphCPE","title":"Gonen \\& Heller Concordance Probability Estimate — coxphCPE","text":"Calculates Concordance Probability Estimate Cox model.","code":""},{"path":"/dev/reference/coxphCPE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gonen \\& Heller Concordance Probability Estimate — coxphCPE","text":"","code":"coxphCPE(phfit, out.ties=FALSE)"},{"path":"/dev/reference/coxphCPE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gonen \\& Heller Concordance Probability Estimate — coxphCPE","text":"phfit output proportional hazards fit. .ties binary flag decide pairs tied risk scores     used.","code":""},{"path":"/dev/reference/coxphCPE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gonen \\& Heller Concordance Probability Estimate — coxphCPE","text":"coxphCPE returns vector CPE, smooth.CPE se.CPE   estimate, smoothed estimate standard error respectively.","code":""},{"path":"/dev/reference/coxphCPE.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Gonen \\& Heller Concordance Probability Estimate — coxphCPE","text":"Gonen M Heller G. (2005) Concordance probability discriminatory   power proportional hazards regression. Biometrika 92, 965-970. Heller G Mo Q. (2016). Estimating concordance probability   survival analysis discrete number risk groups.   Lifetime Data Analysis, 22(2):263-79.","code":""},{"path":"/dev/reference/coxphCPE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gonen \\& Heller Concordance Probability Estimate — coxphCPE","text":"","code":"if (FALSE)  library(survival)   data(pbc) #> Warning: data set ‘pbc’ not found   pbcfit <- coxph(Surv(time, status==2) ~ trt + log(copper), pbc,     subset=(trt>0 & copper>0)) #> Error in coxph(Surv(time, status == 2) ~ trt + log(copper), pbc, subset = (trt >     0 & copper > 0)): could not find function \"coxph\"   coxphCPE(pbcfit) #> Error in coxphCPE(pbcfit): object 'pbcfit' not found"},{"path":"/dev/reference/coxphERR.html","id":null,"dir":"Reference","previous_headings":"","what":"Heller Explained Relative Risk — coxphERR","title":"Heller Explained Relative Risk — coxphERR","text":"Calculates contribution subset covariates explained   relative risk derived full Cox proportional hazards model.","code":""},{"path":"/dev/reference/coxphERR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heller Explained Relative Risk — coxphERR","text":"","code":"coxphERR(phfit, ngamma=NULL)"},{"path":"/dev/reference/coxphERR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heller Explained Relative Risk — coxphERR","text":"phfit output proportional hazards fit. ngamma vector indices corresponding covariates     interest. missing (default), explained relative risk     computed full model.","code":""},{"path":"/dev/reference/coxphERR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Heller Explained Relative Risk — coxphERR","text":"function coxphERR returns vector (ERR, se.ERR).   first component ERR represents contribution subset   covariates explained relative risk estimate full   model. set covariates provided, computes   estimate full model. second component se.ERR   standard error estimate.","code":""},{"path":"/dev/reference/coxphERR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Heller Explained Relative Risk — coxphERR","text":"object phfit result call coxph   option x=TRUE.","code":""},{"path":"/dev/reference/coxphERR.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Heller Explained Relative Risk — coxphERR","text":"Heller G. (2012) measure explained risk proportional hazards   model. Biostatistics","code":""},{"path":"/dev/reference/coxphERR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Heller Explained Relative Risk — coxphERR","text":"","code":"if (FALSE) {  library(survival)  ovarianfit <- coxph(Surv(futime, fustat) ~ age + resid.ds + rx +                                            ecog.ps, data=ovarian,x=T)   # Compute the explained relative risk (ERR) and  # its standard error (se.ERR) for the full model.  coxphERR(ovarianfit)         # Compute the contribution of age and ECOG performance status to  # the explained relative risk. Age and ECOG performance status are   # the first and fourth covariates in the model.  coxphERR(ovarianfit, c(1,4)) }"},{"path":"/dev/reference/coxphQuantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Survival time quantile as a function of covariate — coxphQuantile","title":"Survival time quantile as a function of covariate — coxphQuantile","text":"Draws quantile curve survival distribution function covariate.","code":""},{"path":"/dev/reference/coxphQuantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival time quantile as a function of covariate — coxphQuantile","text":"","code":"coxphQuantile(phfit, xrange, p=0.5, whichx=1, otherx=NULL, ...)"},{"path":"/dev/reference/coxphQuantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survival time quantile as a function of covariate — coxphQuantile","text":"phfit output proportional hazards fit. xrange range covariate values quantiles     survival times computed. p probability level quantile (default median). whichx one covariates Cox model,     one chosen quantile plot. otherx values covariates Cox model.      missing uses average values. ... additional parameters passed lines command.","code":""},{"path":"/dev/reference/coxphQuantile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Survival time quantile as a function of covariate — coxphQuantile","text":"function used draw quantile curves.  requires plot   data (time & covariate interest) present.  See example. invisibly returns observed failure times covariate   values estimated survival probability (exactly) p.","code":""},{"path":"/dev/reference/coxphQuantile.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Survival time quantile as a function of covariate — coxphQuantile","text":"Heller G. Simonoff J.S. (1992) Prediction censored survival data: comparison proportional hazards linear regression models. Biometrics 48, 101-115.","code":""},{"path":"/dev/reference/coxphQuantile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Survival time quantile as a function of covariate — coxphQuantile","text":"","code":"if (FALSE)   library(survival) data(pbc) #> Warning: data set ‘pbc’ not found pbcfit <- coxph(Surv(time, status==2) ~ trt + log(copper), pbc,                       subset=(trt>0 & copper>0))  #> Error in coxph(Surv(time, status == 2) ~ trt + log(copper), pbc, subset = (trt >     0 & copper > 0)): could not find function \"coxph\" plot(log(pbc$copper[pbc$trt>0 & pbc$copper>0]), pbc$time[pbc$trt>0 &   pbc$copper>0], pch=c(\"o\",\"x\")[1+pbc$status[pbc$trt>0 & pbc$copper>0]],    xlab=\"log Copper\", ylab=\"Survival time\") #> Error in plot(log(pbc$copper[pbc$trt > 0 & pbc$copper > 0]), pbc$time[pbc$trt >     0 & pbc$copper > 0], pch = c(\"o\", \"x\")[1 + pbc$status[pbc$trt >     0 & pbc$copper > 0]], xlab = \"log Copper\", ylab = \"Survival time\"): object 'pbc' not found coxphQuantile(pbcfit, c(2.5,6), whichx=2, otherx=1) #> Error in coxphQuantile(pbcfit, c(2.5, 6), whichx = 2, otherx = 1): object 'pbcfit' not found coxphQuantile(pbcfit, c(2.5,6), p=0.75, whichx=2, otherx=2, col=2) #> Error in coxphQuantile(pbcfit, c(2.5, 6), p = 0.75, whichx = 2, otherx = 2,     col = 2): object 'pbcfit' not found"},{"path":"/dev/reference/deltaAUC.html","id":null,"dir":"Reference","previous_headings":"","what":"Comparing the AUC from ROC curves from nested binary regression — deltaAUC","title":"Comparing the AUC from ROC curves from nested binary regression — deltaAUC","text":"Conducts test","code":""},{"path":"/dev/reference/deltaAUC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Comparing the AUC from ROC curves from nested binary regression — deltaAUC","text":"","code":"deltaAUC(y, x, z)"},{"path":"/dev/reference/deltaAUC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Comparing the AUC from ROC curves from nested binary regression — deltaAUC","text":"y binary response variable x matrix set covariates basis existing     (reduced) model z matrix set covariates added get new     (full) model","code":""},{"path":"/dev/reference/deltaAUC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Comparing the AUC from ROC curves from nested binary regression — deltaAUC","text":"returns list following elements par.full MRC estimate parameters full model par.red MRC estimate parameters reduced model results matrix od results gives full reduced model     AUCs along test statistic p-value","code":""},{"path":"/dev/reference/deltaAUC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Comparing the AUC from ROC curves from nested binary regression — deltaAUC","text":"models fit using maximum rank correlation (MRC) method   alternate approach logistic regression. MRC area   ROC curve (AUC) maximized opposed likelihood   logistic regression. Due invariance AUC location scale    shifts one parameters (anchor variable) set 1. first variable (column) x used anchor variable. IPMN data set used example paper included.   columns high risk lesion (V1), recent weight loss (V2), main   duct involvement (V4), presence solid component imaging (V3),   lesion size (V5).","code":""},{"path":"/dev/reference/deltaAUC.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Comparing the AUC from ROC curves from nested binary regression — deltaAUC","text":"Heller G., Seshan V.E., Moskowitz C.S. Gonen M. (2016) Inference   difference area ROC curve derived nested   binary regression models. Biostatistics 18, 260-274.","code":""},{"path":"/dev/reference/deltaAUC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Comparing the AUC from ROC curves from nested binary regression — deltaAUC","text":"","code":"data(ipmn)   deltaAUC(ipmn$V1, cbind(ipmn$V4, ipmn$V3, ipmn$V5), ipmn$V2) #> $par.full #> [1] 1.0000000 0.1685387 0.7030273 0.4309026 #>  #> $par.red #> [1] 1.0000000 0.3973677 0.6374656 #>  #> $results #>             AUCfull AUCreduced statistic p-value #> Empirical 0.8045688  0.7806801  9.842135   3e-05 #> Smooth    0.8007295  0.7777246  9.478028   5e-05 #>"},{"path":"/dev/reference/fedesign.html","id":null,"dir":"Reference","previous_headings":"","what":"Trial Designs Based On Fisher's Exact Test — fedesign","title":"Trial Designs Based On Fisher's Exact Test — fedesign","text":"Calculates sample size, effect size power based   Fisher's exact test","code":""},{"path":"/dev/reference/fedesign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trial Designs Based On Fisher's Exact Test — fedesign","text":"","code":"fe.ssize(p1, p2, alpha=0.05, power=0.8, r=1, npm=5, mmax=1000) CPS.ssize(p1, p2, alpha=0.05, power=0.8, r=1) fe.mdor(ncase, ncontrol, pcontrol, alpha=0.05, power=0.8) mdrr(n, cprob, presp, alpha=0.05, power=0.8, niter=15) fe.power(d, n1, n2, p1, alpha = 0.05) or2pcase(pcontrol, OR)"},{"path":"/dev/reference/fedesign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trial Designs Based On Fisher's Exact Test — fedesign","text":"p1 response rate standard treatment p2 response rate experimental treatment d difference = p2-p1 pcontrol control group probability n1 sample size standard treatment group n2 sample size standard treatment group ncontrol control group sample size ncase case group sample size alpha size test (default 5%) power power test (default 80%) r treatments randomized 1:r ratio (default r=1) npm sample size program searches sample sizes     range (+/- npm) get exact power mmax maximum group size exact power     calculated n total number subjects cprob proportion patients marger positive presp probability response subjects niter number iterations binary search odds-ratio","code":""},{"path":"/dev/reference/fedesign.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Trial Designs Based On Fisher's Exact Test — fedesign","text":"CPS.ssize returns Casagrande, Pike, Smith sample size close exact.  Use small differences p2-p1 (hence large sample sizes) get result instantaneously. Since Fisher's exact test orders tables probability test naturally two-sided. fe.ssize return 2x3 matrix CPS Fisher's exact sample sizes power. fe.mdor return 3x2 matrix Schlesselman, CPS Fisher's exact minimum detectable odds ratios corresponding power. fe.power returns Kx2 matrix probabilities (p2) exact power. mdrr computes minimum detectable P(resp|marker+) P(resp|marker-) configurations total sample size (n), P(response) (presp) proportion subjects marker positive (cprob) specified. or2pcase give probability disease among cases given probability disease controls (pcontrol) odds-ratio ().","code":""},{"path":"/dev/reference/fedesign.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Trial Designs Based On Fisher's Exact Test — fedesign","text":"Casagrande, JT., Pike, MC. Smith PG. (1978). improved   approximate formula calculating sample sizes comparing two   binomial distributions. Biometrics 34, 483-486. Fleiss, J. (1981) Statistical Methods Rates Proportions. Schlesselman, J. (1987) Re: Smallest Detectable Relative Risk   Multiple Controls Per Case.  . J. Epi.","code":""},{"path":"/dev/reference/gsdesign.html","id":null,"dir":"Reference","previous_headings":"","what":"Group Sequential Designs — gsdesign","title":"Group Sequential Designs — gsdesign","text":"Functions calculate sample size group sequential designs","code":""},{"path":"/dev/reference/gsdesign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group Sequential Designs — gsdesign","text":"","code":"gsdesign.binomial(ifrac, pC, pE, r = 1, sig.level = 0.05, power = 0.8,   delta.eb=0.5, delta.fb = NULL, alternative = c(\"two.sided\",   \"one.sided\"), pooled.variance = FALSE, CPS = TRUE, tol=0.00001, ...)  gsdesign.normal(ifrac, delta, sd = 1, r = 1, sig.level = 0.05,   power = 0.8, delta.eb = 0.5, delta.fb = NULL, alternative =    c(\"two.sided\", \"one.sided\"), tol=0.00001, ...) gsdesign.survival(ifrac, haz.ratio, r = 1, sig.level = 0.05,    power = 0.8, delta.eb = 0.5, delta.fb = NULL, alternative =    c(\"two.sided\", \"one.sided\"), tol=0.00001, ...)"},{"path":"/dev/reference/gsdesign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group Sequential Designs — gsdesign","text":"ifrac information fraction ratio current sample size     number events total sample size number events.     increasing vector numbers 0 1     last one 1.  just 1 given fixed sample design derived. pC prob success standard therapy (binomial data) pE prob success experimental therapy (binomial data) delta true difference means (normal data) sd standard deviation (normal data) haz.ratio hazard ratio (survival comparison) r treatment allocation r (default=1) experimental per 1 control. sig.level significance level (type error probability) power power test (1 minus type II error probability) delta.eb power efficacy boundary Pocock (=0)     O'Brien-Fleming (=0.5) family (default 0.5) delta.fb power futility boundary Pocock (=0)     O'Brien-Fleming (=0.5) family (default NULL .e. futility     boundary requested.) alternative one- two-sided test. pooled.variance whether test statistic standardized     pooled (2*pbar*(1-pbar)) unpooled variance (pC*(1-pC) + pE*(1-pE)).     Default unpooled variance. CPS whether continuity correction used sample size     calculation Casagrande, Pike & Smith. Default use . tol tolerance level multivariate normal probability     computation. ... additional options passed pmvnorm function.","code":""},{"path":"/dev/reference/gsdesign.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group Sequential Designs — gsdesign","text":"list ifrac, sig.level, power, alternative, delta.eb, delta.fb : efbdry critical value use different looks. futbdry critical value use different looks. sample.size sample size per arm binomial/normal data. num.events total number failures     converted number subjects using censoring proportion.","code":""},{"path":"/dev/reference/gsdesign.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Group Sequential Designs — gsdesign","text":"futility boundary returned delta.fb specified   .e. stopping futility requested.  futility boundary   non-binding.  significance level adjusted account   early stopping utility.  makes test bit conservative   true size less nominal level. Casagrande-Pike-Smith type continuity correction obtained using   formula n*1 + sqrt1+4/abs(pC-pE)*n^2 n   uncorrected sample size.","code":""},{"path":"/dev/reference/jonckheere.test.html","id":null,"dir":"Reference","previous_headings":"","what":"Exact/permutation version of Jonckheere-Terpstra test — jonckheere.test","title":"Exact/permutation version of Jonckheere-Terpstra test — jonckheere.test","text":"Jonckheere-Terpstra test test ordered differences among classes","code":""},{"path":"/dev/reference/jonckheere.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exact/permutation version of Jonckheere-Terpstra test — jonckheere.test","text":"","code":"jonckheere.test(x, g, alternative = c(\"two.sided\", \"increasing\",                  \"decreasing\"), nperm=NULL)"},{"path":"/dev/reference/jonckheere.test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exact/permutation version of Jonckheere-Terpstra test — jonckheere.test","text":"x, g data group vector alternative means monotonic (two.sided), increasing,     decreasing nperm number permutations reference distribution.     default null case permutation p-value     computed. Recommend user set nperm 1000 higher     permutation p-value desired.","code":""},{"path":"/dev/reference/jonckheere.test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Exact/permutation version of Jonckheere-Terpstra test — jonckheere.test","text":"jonckheere.test exact (permutation) version   Jonckheere-Terpstra test.  uses statistic   $$\\sum_{k<l} \\sum_{ij} (X_{ik} < X_{jl}) + 0.5 (X_{ik} =     X_{jl}),$$ \\(, j\\) observations groups \\(k\\)   \\(l\\) respectively.  asymptotic version equivalent   cor.test(x, g, method=\"k\"). exact calculation requires   ties sample size less 100. data   tied sample size 100 permutation p-value returned.","code":""},{"path":"/dev/reference/jonckheere.test.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Exact/permutation version of Jonckheere-Terpstra test — jonckheere.test","text":"Jonckheere, . R. (1954). distribution-free k-sample test   ordered alternatives. Biometrika 41:133-145. Terpstra, T. J. (1952). asymptotic normality consistency   Kendall's test trend, ties present one ranking.   Indagationes Mathematicae 14:327-333.","code":""},{"path":"/dev/reference/jonckheere.test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Exact/permutation version of Jonckheere-Terpstra test — jonckheere.test","text":"","code":"set.seed(1234)   g <- rep(1:5, rep(10,5))   x <- rnorm(50)   jonckheere.test(x+0.3*g, g) #>  #> \tJonckheere-Terpstra test #>  #> data:   #> JT = 629, p-value = 0.02734 #> alternative hypothesis: two.sided #>    x[1:2] <- mean(x[1:2]) # tied data   jonckheere.test(x+0.3*g, g) #> Warning: Sample size > 100 or data with ties  #>  p-value based on normal approximation. Specify nperm for permutation p-value #>  #> \tJonckheere-Terpstra test #>  #> data:   #> JT = 639, p-value = 0.01741 #> alternative hypothesis: two.sided #>    jonckheere.test(x+0.3*g, g, nperm=5000) #>  #> \tJonckheere-Terpstra test #>  #> data:   #> JT = 639, p-value = 0.0136 #> alternative hypothesis: two.sided #>"},{"path":"/dev/reference/ktau.html","id":null,"dir":"Reference","previous_headings":"","what":"Kendall's tau-b estimate — ktau","title":"Kendall's tau-b estimate — ktau","text":"Calculates Kendall's tau-b.","code":""},{"path":"/dev/reference/ktau.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kendall's tau-b estimate — ktau","text":"","code":"ktau(x, y)"},{"path":"/dev/reference/ktau.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kendall's tau-b estimate — ktau","text":"x first variable y second variable","code":""},{"path":"/dev/reference/ktau.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Kendall's tau-b estimate — ktau","text":"ktau returns Kendall's tau-b.","code":""},{"path":"/dev/reference/ktau.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Kendall's tau-b estimate — ktau","text":"ktau computes quantity cor(x, y, method=\"kendall\").   uses faster algorithm pairwise comparisons used cor.","code":""},{"path":"/dev/reference/ktau.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Kendall's tau-b estimate — ktau","text":"","code":"set.seed(1234)   x <- rnorm(10000); y <- x+rnorm(10000)   cor(x, y, method=\"k\") #> [1] 0.4956963   clinfun:::ktau(x,y)   #> [1] 0.4956963"},{"path":"/dev/reference/oc.twostage.bdry.html","id":null,"dir":"Reference","previous_headings":"","what":"Two-stage boundary operating characteristics — oc.twostage.bdry","title":"Two-stage boundary operating characteristics — oc.twostage.bdry","text":"Calculates operating characteristics two-stage boundary.","code":""},{"path":"/dev/reference/oc.twostage.bdry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Two-stage boundary operating characteristics — oc.twostage.bdry","text":"","code":"oc.twostage.bdry(pu, pa, r1, n1, r, n)"},{"path":"/dev/reference/oc.twostage.bdry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Two-stage boundary operating characteristics — oc.twostage.bdry","text":"pu unacceptable response rate pa response rate desirable r1 first stage threshold declare treatment undesirable n1 first stage sample size r overall threshold declare treatment undesirable n total sample size","code":""},{"path":"/dev/reference/oc.twostage.bdry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Two-stage boundary operating characteristics — oc.twostage.bdry","text":"oc.twostage.bdry returns type II error rates well   probability early temination expected sample size pu   specific boundary.","code":""},{"path":"/dev/reference/permlogrank.html","id":null,"dir":"Reference","previous_headings":"","what":"Permutation version of survdiff — permlogrank","title":"Permutation version of survdiff — permlogrank","text":"Small sample survdiff using permutation reference distributions.","code":""},{"path":"/dev/reference/permlogrank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Permutation version of survdiff — permlogrank","text":"","code":"permlogrank(formula, data, subset, na.action, rho=0, nperm=5000)"},{"path":"/dev/reference/permlogrank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Permutation version of survdiff — permlogrank","text":"nperm number permutations reference distribution formula, data, subset, na.action, rho see survdiff details","code":""},{"path":"/dev/reference/permlogrank.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Permutation version of survdiff — permlogrank","text":"permlogrank permutation version k-sample survdiff. see   survdiff survival package details.","code":""},{"path":"/dev/reference/permlogrank.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Permutation version of survdiff — permlogrank","text":"Heller G, Venkatraman ES. (1996). Resampling procedures compare two   survival distributions presence right censored data.   Biometrics 52:1204-1213.","code":""},{"path":"/dev/reference/ph2simon.html","id":null,"dir":"Reference","previous_headings":"","what":"Simon's 2-stage Phase II design — ph2simon","title":"Simon's 2-stage Phase II design — ph2simon","text":"Calculates Optimal Minimax 2-stage Phase II designs given   Richard Simon","code":""},{"path":"/dev/reference/ph2simon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simon's 2-stage Phase II design — ph2simon","text":"","code":"ph2simon(pu, pa, ep1, ep2, nmax=100) # S3 method for ph2simon print(x, ...) # S3 method for ph2simon plot(x, ...)"},{"path":"/dev/reference/ph2simon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simon's 2-stage Phase II design — ph2simon","text":"pu unacceptable response rate pa response rate desirable ep1 threshold probability declaring drug desirable     p0 ep2 threshold probability rejecting drug     p1 nmax maximum total sample size (default 100; can     500) x object returned ph2simon ... arguments passed onto plot print commands called     within","code":""},{"path":"/dev/reference/ph2simon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simon's 2-stage Phase II design — ph2simon","text":"ph2simon returns list pu, pa, alpha, beta nmax   : matrix best 2 stage designs value total     sample size n.  6 columns : r1, n1, r, n, EN(p0), PET(p0) Trial stopped early <= r1 responses seen first stage   treatment considered desirable >r responses seen. \"print\" method formats returns minimax optimal   designs.  \"plot\" plots expected sample size agains maximum   sample size Jung et al., 2001","code":""},{"path":[]},{"path":"/dev/reference/ph2simon.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simon's 2-stage Phase II design — ph2simon","text":"Simon R. (1989).  Optimal Two-Stage Designs Phase II Clinical   Trials. Controlled Clinical Trials 10, 1-10. Jung SH, Carey M Kim KM. (2001). Graphical Search Two-Stage   Designs Phase II Clinical Trials. Controlled Clinical     Trials  22, 367-372.","code":""},{"path":"/dev/reference/ph2simon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simon's 2-stage Phase II design — ph2simon","text":"","code":"ph2simon(0.2, 0.4, 0.1, 0.1) #>  #>  Simon 2-stage Phase II design  #>  #> Unacceptable response rate:  0.2  #> Desirable response rate:  0.4  #> Error rates: alpha =  0.1 ; beta =  0.1  #>  #>         r1 n1  r  n EN(p0) PET(p0) #> Optimal  3 17 10 37  26.02  0.5489 #> Minimax  3 19 10 36  28.26  0.4551 #>    ph2simon(0.2, 0.35, 0.05, 0.05) #>  #>  Simon 2-stage Phase II design  #>  #> Unacceptable response rate:  0.2  #> Desirable response rate:  0.35  #> Error rates: alpha =  0.05 ; beta =  0.05  #>  #>         r1 n1  r  n EN(p0) PET(p0) #> Optimal 11 53 26 99  69.88  0.6330 #> Minimax 15 68 25 95  75.44  0.7244 #>  #> Warning:   Optimal sample size too close to nmax.  #>   Try increasing nmax (current value = 100)   ph2simon(0.2, 0.35, 0.05, 0.05, nmax=150) #>  #>  Simon 2-stage Phase II design  #>  #> Unacceptable response rate:  0.2  #> Desirable response rate:  0.35  #> Error rates: alpha =  0.05 ; beta =  0.05  #>  #>         r1 n1  r   n EN(p0) PET(p0) #> Optimal 11 50 28 109  67.07  0.7107 #> Minimax 15 68 25  95  75.44  0.7244 #>"},{"path":"/dev/reference/ph2single.html","id":null,"dir":"Reference","previous_headings":"","what":"Exact single stage Phase II design — ph2single","title":"Exact single stage Phase II design — ph2single","text":"Calculates exact one stage Phase II design","code":""},{"path":"/dev/reference/ph2single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exact single stage Phase II design — ph2single","text":"","code":"ph2single(pu,pa,ep1,ep2,nsoln=5)"},{"path":"/dev/reference/ph2single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exact single stage Phase II design — ph2single","text":"pu unacceptable response rate pa response rate desirable ep1 threshold probability declaring drug desirable     p0 ep2 threshold probability rejecting drug     p1 nsoln number designs given alpha beta","code":""},{"path":"/dev/reference/ph2single.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exact single stage Phase II design — ph2single","text":"ph2single returns data frame variables: n, r, Type   Type II errors. Treatment desirable >r respenses seen.","code":""},{"path":"/dev/reference/power.ladesign.html","id":null,"dir":"Reference","previous_headings":"","what":"Power of k-sample rank test under Lehmann alternative — power.ladesign","title":"Power of k-sample rank test under Lehmann alternative — power.ladesign","text":"Functions calculate power rank tests animal studies.","code":""},{"path":"/dev/reference/power.ladesign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Power of k-sample rank test under Lehmann alternative — power.ladesign","text":"","code":"power.ladesign(gsize, odds.ratio, sig.level = 0.05, statistic =      c(\"Kruskal-Wallis\", \"Jonckheere-Terpstra\"), alternative =      c(\"two.sided\", \"one.sided\"), nrep=1e+6)    # S3 method for ladesign print(x,...)"},{"path":"/dev/reference/power.ladesign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Power of k-sample rank test under Lehmann alternative — power.ladesign","text":"gsize sample size k (= length vector) groups. odds.ratio odds ratio parameters k-1 groups.  first     group considered control. sig.level significance level test (default = 0.05) statistic test statistic k-group comparison. one     Kruskal-Wallis (default) Jonckeere-Terpstra. alternative one- two-sided test.  Valid     Jonckheere-Terpstra test. nrep number reps (default 1 million) Monte Carlo. x object class ladesign returned power.ladesign ... arguments passed left S3 method consistency.","code":""},{"path":"/dev/reference/power.ladesign.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Power of k-sample rank test under Lehmann alternative — power.ladesign","text":"returns list objects group.size, odds.ratio, statistic,   sig.level power.   \"print\" method formats output.","code":""},{"path":"/dev/reference/power.ladesign.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Power of k-sample rank test under Lehmann alternative — power.ladesign","text":"Although power Jonckheere-Terpstra test calculated   set odds ratio, test meant monotone alternative.  Thus   preferable specify odds ratios monotonically   increasing values larger 1 decreasing values   smaller 1.","code":""},{"path":"/dev/reference/power.ladesign.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Power of k-sample rank test under Lehmann alternative — power.ladesign","text":"Heller G. (2006).  Power calculations preclinical studies using   K-sample rank test Lehmann alternative hypothesis.   Statistics Medicine 25, 2543-2553.","code":""},{"path":"/dev/reference/power.ladesign.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Power of k-sample rank test under Lehmann alternative — power.ladesign","text":"","code":"power.ladesign(c(9,7), 4, statistic=\"K\") #>          Number of groups = 2  #>                group size = 9 7  #> odds ratios w.r.t group 1 = 4  #>            test statistic = Kruskal-Wallis  #>               alternative = two.sided  #>        significance level = 0.05  #>                     power = 0.587    power.ladesign(c(9,7,9), c(2,4), statistic=\"J\") #>          Number of groups = 3  #>                group size = 9 7 9  #> odds ratios w.r.t group 1 = 2 4  #>            test statistic = Jonckheere-Terpstra  #>               alternative = two.sided  #>        significance level = 0.05  #>                     power = 0.66    power.ladesign(c(9,7,9), c(2,4), statistic=\"J\", alt=\"o\") #>          Number of groups = 3  #>                group size = 9 7 9  #> odds ratios w.r.t group 1 = 2 4  #>            test statistic = Jonckheere-Terpstra  #>               alternative = one.sided  #>        significance level = 0.05  #>                     power = 0.788"},{"path":"/dev/reference/pselect.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability of selection under pick the winner rule — pselect","title":"Probability of selection under pick the winner rule — pselect","text":"Calculates probability selecting treatment higher   response rate pick winner rule.","code":""},{"path":"/dev/reference/pselect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability of selection under pick the winner rule — pselect","text":"","code":"pselect(n, p, min.diff=NULL, min.resp=NULL)"},{"path":"/dev/reference/pselect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability of selection under pick the winner rule — pselect","text":"n sample size treatment arm.  either single     integer vector two integers special case     comparing two treatments unequal sample sizes p vector response rates treatments. min.diff number responses rate     best treatment superior others chosen.     must positive integer rate 0 1.      missing defaults 1 equal sample size case quits     warning unequal sample size case. min.resp minimum number responses treatment arm     considered . missing defaults 0.","code":""},{"path":"/dev/reference/pselect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability of selection under pick the winner rule — pselect","text":"function returns list : prob.none.worthy probability treatment     minimum number responses specified min.resp. element     present min.resp greater 0 least one arm. prob.inconclusive probability best treatment     requisite min.resp responses exceeds second best     less min.diff responses (rate) provided second best also     least min.resp responses. prob.selection matrix treatment gives     response probability probability selecting     .e. number responses chosen arm least min.resp     either none remaining arms exceed min.resp threshold     chosen (best) arm better second best least     min.diff responses (rate).","code":""},{"path":"/dev/reference/pselect.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Probability of selection under pick the winner rule — pselect","text":"Simon R, Wittes RE, Ellenberg SS. (1985). Randomized phase II clinical   trials. Cancer Treat Rep 69, 1375-1381.","code":""},{"path":"/dev/reference/pselect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probability of selection under pick the winner rule — pselect","text":"","code":"# selection when no diffrence i.e. type I error   pselect(18, c(0.2, 0.2, 0.2)) #> $prob.inconclusive #> [1] 0.2236879 #>  #> $prob.selection #>       sample.size resp.rate prob.selection #> trt 1          18       0.2      0.2587707 #> trt 2          18       0.2      0.2587707 #> trt 3          18       0.2      0.2587707 #>    # selection probability   pselect(18, c(0.2, 0.2, 0.4)) #> $prob.inconclusive #> [1] 0.09676346 #>  #> $prob.selection #>       sample.size resp.rate prob.selection #> trt 1          18       0.2     0.05136236 #> trt 2          18       0.2     0.05136236 #> trt 3          18       0.4     0.80051182 #>    pselect(26, c(0.2, 0.2, 0.4), min.diff=2, min.resp=3) #> $prob.none.worthy #> [1] 1.961946e-06 #>  #> $prob.inconclusive #> [1] 0.1706533 #>  #> $prob.selection #>       sample.size resp.rate prob.selection #> trt 1          26       0.2     0.01536975 #> trt 2          26       0.2     0.01536975 #> trt 3          26       0.4     0.79860522 #>    # unequal sample size case   pselect(c(27,54), c(0.5, 0.65), min.diff=0.05) #> $prob.inconclusive #> [1] 0.1405518 #>  #> $prob.selection #>       sample.size resp.rate prob.selection #> trt 1          27      0.50     0.04570331 #> trt 2          54      0.65     0.81374489 #>    # unequal sample size case   pselect(c(27,54), c(0.5, 0.65), min.diff=0.05, min.resp=c(14,27)) #> $prob.none.worthy #> [1] 0.00405262 #>  #> $prob.inconclusive #> [1] 0.1340373 #>  #> $prob.selection #>       sample.size resp.rate prob.selection #> trt 1          27      0.50     0.04625472 #> trt 2          54      0.65     0.81565539 #>"},{"path":"/dev/reference/roc.area.test.html","id":null,"dir":"Reference","previous_headings":"","what":"Nonparametric area under the ROC curve — roc.area.test","title":"Nonparametric area under the ROC curve — roc.area.test","text":"Computes nonparametric area ROC curve variance   based U-statistic theory (DDCP).","code":""},{"path":"/dev/reference/roc.area.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nonparametric area under the ROC curve — roc.area.test","text":"","code":"roc.area.test(markers, status)   # S3 method for roc.area.test print(x, ...)"},{"path":"/dev/reference/roc.area.test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nonparametric area under the ROC curve — roc.area.test","text":"markers marker values subject.      one markers matrix. status binary disease status indicator x object class roc.area.test output function. ... optional arguments print function.","code":""},{"path":"/dev/reference/roc.area.test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Nonparametric area under the ROC curve — roc.area.test","text":"list following elements area estimated area. var estimated variance (matrix). stat test statistic equality AUCs. returned     one diagnostic marker present. p.value p-value test equality (2-sided). df degrees freedom chi-square. \"print\" method formats returns output.","code":""},{"path":"/dev/reference/roc.area.test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Nonparametric area under the ROC curve — roc.area.test","text":"calculates area variance.  one marker   calculates statistic test equality AUCs.    statistic standard normal reference distribution two   variables chi-square number variables minus 1.","code":""},{"path":"/dev/reference/roc.area.test.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Nonparametric area under the ROC curve — roc.area.test","text":"DeLong, E. R., D. M. DeLong, D. L. Clarke-Pearson. 1988. Comparing   areas two correlated receiver operating characteristic   curves:  nonparametric approach. Biometrics 44:837-845.","code":""},{"path":"/dev/reference/roc.area.test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Nonparametric area under the ROC curve — roc.area.test","text":"","code":"g <- rep(0:1, 50) x <- rnorm(100) + g y <- rnorm(100) + g z <- rnorm(100) + g roc.area.test(cbind(x,y), g) #>   2 markers with AUC 0.7368 0.7368  #>   test statistic = 0  #>   p-value = 1 from standard normal reference  roc.area.test(cbind(x,y,z), g) #>   3 markers with AUC 0.7368 0.7368 0.7496  #>   test statistic = 0.03830606  #>   p-value = 0.9810292 from chi-square (df = 2) reference  y1 <- y + 0.75*g roc.area.test(cbind(x,y1), g) #>   2 markers with AUC 0.7368 0.8628  #>   test statistic = 2.212703  #>   p-value = 0.02691816 from standard normal reference"},{"path":"/dev/reference/roc.curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Empirical ROC curve — roc.curve","title":"Empirical ROC curve — roc.curve","text":"Computes empricial ROC curve diagnostic tool.","code":""},{"path":"/dev/reference/roc.curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Empirical ROC curve — roc.curve","text":"","code":"roc.curve(marker, status, method=c(\"empirical\"))   # S3 method for roc.curve print(x, ...)   # S3 method for roc.curve plot(x, ...)   # S3 method for roc.curve lines(x, ...)"},{"path":"/dev/reference/roc.curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Empirical ROC curve — roc.curve","text":"marker marker values subject. status binary disease status indicator method method estimating ROC curve.  Currently     empirical curve implemented. x object class roc.area.test output function. ... optional arguments print, plot lines functions.","code":""},{"path":"/dev/reference/roc.curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Empirical ROC curve — roc.curve","text":"list following elements tpr true positive rates thresholds. fpr true positive rates thresholds. marker diagnostic marker studied. status binary disease \"print\" method returns nonparametric AUC s.e. \"plot\" \"lines\" methods can used draw new plot add   existing plot ROC curve.","code":""},{"path":"/dev/reference/roc.curve.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Empirical ROC curve — roc.curve","text":"computation based assuming larger values marker   indicative disease.  given threshold x0, TPR   P(marker >= x0|status =1) FPR P(marker >= x0|status =0).    function computes empirical estimates TPR FPR.","code":""},{"path":"/dev/reference/roc.curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Empirical ROC curve — roc.curve","text":"","code":"g <- rep(0:1, 50) x <- rnorm(100) + g y <- rnorm(100) + 1.5*g o <- roc.curve(x, g) plot(o) lines(roc.curve(y, g), col=2)"},{"path":"/dev/reference/roc.perm.test.html","id":null,"dir":"Reference","previous_headings":"","what":"Permutation test to compare ROC curve — roc.perm.test","title":"Permutation test to compare ROC curve — roc.perm.test","text":"Computes test statistic permutation reference distribution   comparing paired unpaired ROC curves.","code":""},{"path":"/dev/reference/roc.perm.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Permutation test to compare ROC curve — roc.perm.test","text":"","code":"roc.perm.test(marker, status, marker2=NULL, group=NULL,               nperm=2500, mp=NULL) # S3 method for roc.perm.test print(x, ...) # S3 method for roc.perm.test plot(x, ...)"},{"path":"/dev/reference/roc.perm.test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Permutation test to compare ROC curve — roc.perm.test","text":"marker marker values subject. status binary disease status indicator. marker2 second diagnostic marker subjects (paired). group indicator diagnostic test used (unpaired). nperm number permutations reference distribution. mp mixing proportion unpaired case proportion     diseased subjects can differ. x object class roc.perm.test output function. ... optional arguments print plot functions.","code":""},{"path":"/dev/reference/roc.perm.test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Permutation test to compare ROC curve — roc.perm.test","text":"object class roc.perm.test following elements ostat test statistic observed data. pstat test statistic permuted data. p.value p-value test equality (2-sided). \"print\" method formats returns statistic p-value.   \"plot\" method plots density permutation reference   distribution marks location observed statistic.","code":""},{"path":"/dev/reference/roc.perm.test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Permutation test to compare ROC curve — roc.perm.test","text":"function implements permutation method described   Venkatraman Begg (1996) paper paired case   Venkatraman (2000) paper unpaired case. function detects whether data paired unpaired   testing options marker2 group specified.    missing stop error message.  present exactly   one missing.","code":""},{"path":"/dev/reference/roc.perm.test.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Permutation test to compare ROC curve — roc.perm.test","text":"Venkatraman, E.S. Begg, C.B. (1996). distribution-free procedure   comparing receiver operating characteristic curves paired   experiment. Biometrika 83, 835-848. Venkatraman, E.S. (2000) permutation test compare receiver   operating characteristic curves. Biometrics 56(4):1134-8.","code":""},{"path":"/dev/reference/roc.perm.test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Permutation test to compare ROC curve — roc.perm.test","text":"","code":"d <- rep(0:1, 50) x <- rnorm(100) + 1.2*d y <- rnorm(100) + 1.2*d oo <- roc.perm.test(x, d, marker2=y) plot(oo)  oo <- roc.perm.test(c(x,y), c(d,d), group=rep(1:2,each=100)) plot(oo)"},{"path":"/dev/reference/toxbdry.html","id":null,"dir":"Reference","previous_headings":"","what":"Stopping rule for toxicity/futility monitoring — toxbdry","title":"Stopping rule for toxicity/futility monitoring — toxbdry","text":"Computes stopping rule operating characteristics   toxicity monitoring based repeated significance testing.","code":""},{"path":"/dev/reference/toxbdry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stopping rule for toxicity/futility monitoring — toxbdry","text":"","code":"toxbdry(pLo, pHi, n, cP0=0.1, cP1=0.9, ngrid=6, niter=10, delta=0,           priority=c(\"null\",\"alt\")) futilbdry(rLo, rHi, n, size=0.1, power=0.9, ngrid=3, niter=10, delta=0.5) bdrycross.prob(n, r, ptox) # S3 method for toxbdry print(x, ...) # S3 method for futilbdry print(x, ...)"},{"path":"/dev/reference/toxbdry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stopping rule for toxicity/futility monitoring — toxbdry","text":"pLo toxicity rate acceptable. rLo baseline (null) response rate. pHi toxicity rate high hence unacceptable. rHi desirable response rate. Stop unlikely. n vector times (sample size) toxicty/response monitored. r vector maximum acceptable toxicities (non-responders     futility) corresponding n. ptox toxicity rates operating characteristics     calculated. futility non-response rate. cP0 boundary crossing probability pLo .e. type error     probability declaring treatment toxicity rate pLo     unacceptable. cP1 boundary crossing probability pHi .e. power     probability declaring treatment toxicity rate pHi     unacceptable. size probability calling drug effective response rate rLo. power probability calling drug effective response rate rHi. ngrid number toxicity rates pLo pHi     operating characteristics computed. niter number iterations run obtain boundary. delta power determining shape boundary.     0 (default) 0.5. priority error threshold prioritize max sample      size small error thresholds satisfied. Default     null .e. error pLo. x object returned function toxbdry. ... additional arguments print.","code":""},{"path":"/dev/reference/toxbdry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stopping rule for toxicity/futility monitoring — toxbdry","text":"function returns list : looks toxicty monitored - input n. lo.bdry lower boundary vector maximum acceptable number     toxicities corresponding number subjects n.      boundary crossing probability slightly cP0. hi.bdry upper boundary vector maximum acceptable number     toxicities corresponding number subjects n.      boundary crossing probability slightly cP0. bdry.oc operating characteristics .e toxicity     rate, probability crossing, stopping (.e. cross     last observation) expected sample size low (lo)     high (hi) boundaries. bdry.alpha alpha levels testing look     two boundaries. stopping toxicity done number toxicities exceeda   boundary .e. boundary gives maximum acceptable number.","code":""},{"path":"/dev/reference/toxbdry.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Stopping rule for toxicity/futility monitoring — toxbdry","text":"Default value boundary shape corresponds Pocock boundary   significance level used looks.   conservative stopping rule use delta greater 0 0.5   corresponds O'Brien-Fleming boundary extremely   conservative early looks. Value 0.1 0.2   reasonable compromise. exact calculations function done along lines   method Chapter 12 Jennison Turnbull (2000). Ivanova,   Qaqish Schell (2005) illustrative paper.","code":""},{"path":"/dev/reference/toxbdry.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Stopping rule for toxicity/futility monitoring — toxbdry","text":"Jennison C Turnbull BW. (2000).  Group Sequential Methods   Applications Clinical Trials.  Chapman Hall/CRC Ivanova , Qaqish BF Schell MJ. (2005). Continuous Toxicity   Monitoring Phase II Trials Oncology. Biometrics 61, 540-545.","code":""},{"path":"/dev/reference/toxbdry.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stopping rule for toxicity/futility monitoring — toxbdry","text":"","code":"toxbdry(0.2, 0.35, c(20,40,60,75)) #>  #>  Toxicity boundary based on repeated significance testing  #>     Boundary shape parameter delta = 0  #>  #>  ****************************************************************** #>  * Stop if the number of toxicities exceeds (i.e. >) the boundary * #>  ****************************************************************** #>  #>   Low boundary:   7/20   12/40   17/60   20/75    #>  High boundary:   7/20   12/40   17/60   21/75    #>  #>  Operating Characteristics:  #>  #>      ptox pcross.lo pstop.lo ess.lo pcross.hi pstop.hi ess.hi #> [1,] 0.20     0.101    0.079   72.0     0.088    0.079   72.0 #> [2,] 0.23     0.247    0.188   68.1     0.214    0.188   68.1 #> [3,] 0.26     0.456    0.354   62.1     0.406    0.354   62.1 #> [4,] 0.29     0.672    0.548   54.7     0.619    0.548   54.7 #> [5,] 0.32     0.838    0.727   47.0     0.797    0.727   47.0 #> [6,] 0.35     0.935    0.859   39.9     0.911    0.859   39.9   toxbdry(0.2, 0.3, c(20,40,60,75), cP0=0.15, cP1=0.8) #> Warning: Max sample size 75 may be small for the specified stopping probabilities #>  #>  Toxicity boundary based on repeated significance testing  #>     Boundary shape parameter delta = 0  #>  #>  ****************************************************************** #>  * Stop if the number of toxicities exceeds (i.e. >) the boundary * #>  ****************************************************************** #>  #>   Low boundary:   6/20   12/40   16/60   20/75    #>  High boundary:   7/20   12/40   16/60   20/75    #>  #>  Operating Characteristics:  #>  #>      ptox pcross.lo pstop.lo ess.lo pcross.hi pstop.hi ess.hi #> [1,] 0.20     0.152    0.140   69.1     0.117    0.103   71.6 #> [2,] 0.22     0.253    0.229   65.7     0.213    0.186   69.0 #> [3,] 0.24     0.381    0.342   61.4     0.341    0.297   65.4 #> [4,] 0.26     0.522    0.469   56.5     0.487    0.427   61.0 #> [5,] 0.28     0.659    0.598   51.2     0.632    0.562   56.1 #> [6,] 0.30     0.777    0.715   45.9     0.758    0.688   51.0   # continuous monitoring   toxbdry(0.1, 0.3, 2:30) #>  #>  Toxicity boundary based on repeated significance testing  #>     Boundary shape parameter delta = 0  #>  #>  ****************************************************************** #>  * Stop if the number of toxicities exceeds (i.e. >) the boundary * #>  ****************************************************************** #>  #>   Low boundary:   1/3   2/8   3/13   4/20   5/26   6/30    #>  High boundary:   1/3   2/8   3/13   4/19   5/26   6/30    #>  #>  Operating Characteristics:  #>  #>      ptox pcross.lo pstop.lo ess.lo pcross.hi pstop.hi ess.hi #> [1,] 0.10     0.100    0.099   28.1     0.097    0.096   28.1 #> [2,] 0.14     0.250    0.245   25.7     0.245    0.239   25.8 #> [3,] 0.18     0.448    0.437   22.4     0.441    0.430   22.5 #> [4,] 0.22     0.644    0.631   18.8     0.638    0.624   19.0 #> [5,] 0.26     0.799    0.786   15.5     0.795    0.781   15.6 #> [6,] 0.30     0.901    0.891   12.6     0.898    0.888   12.7   # prioritize cP1 error threshold   toxbdry(0.1, 0.3, 2:25, priority=\"alt\") #> Warning: Max sample size 25 may be small for the specified stopping probabilities #>  #>  Toxicity boundary based on repeated significance testing  #>     Boundary shape parameter delta = 0  #>  #>  ****************************************************************** #>  * Stop if the number of toxicities exceeds (i.e. >) the boundary * #>  ****************************************************************** #>  #>   Low boundary:   1/4   2/10   3/16   4/23   5/25    #>  High boundary:   1/4   2/10   3/16   4/22   5/25    #>  #>  Operating Characteristics:  #>  #>      ptox pcross.lo pstop.lo ess.lo pcross.hi pstop.hi ess.hi #> [1,] 0.10     0.146    0.145   22.8     0.140    0.139   22.8 #> [2,] 0.14     0.312    0.310   20.5     0.300    0.296   20.5 #> [3,] 0.18     0.504    0.499   17.8     0.488    0.480   17.8 #> [4,] 0.22     0.679    0.673   15.0     0.663    0.652   15.1 #> [5,] 0.26     0.813    0.807   12.5     0.800    0.790   12.5 #> [6,] 0.30     0.902    0.897   10.3     0.893    0.885   10.3"},{"path":"/dev/reference/twostage.admissible.html","id":null,"dir":"Reference","previous_headings":"","what":"Admissible design options between Minimax and Optimal — twostage.admissible","title":"Admissible design options between Minimax and Optimal — twostage.admissible","text":"Lists admissible design options ","code":""},{"path":"/dev/reference/twostage.admissible.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Admissible design options between Minimax and Optimal — twostage.admissible","text":"","code":"twostage.admissible(x)"},{"path":"/dev/reference/twostage.admissible.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Admissible design options between Minimax and Optimal — twostage.admissible","text":"x output ph2simon call","code":""},{"path":"/dev/reference/twostage.admissible.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Admissible design options between Minimax and Optimal — twostage.admissible","text":"twostage.admissible returns design options admissible (Jung   et al, 2004). output matrix 8 columns: r1, n1, r, n,   EN(p0), PET(p0), qLo, qHi. columns qLo qHi give range   probability values particular design admissible.","code":""},{"path":"/dev/reference/twostage.admissible.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Admissible design options between Minimax and Optimal — twostage.admissible","text":"Jung SH, Lee T, Kim K, George, SL. (2004). Admissible two-stage   designs phase II cancer clinical trials. Statistics    medicine 23(4), 561-569.","code":""},{"path":"/dev/reference/twostage.admissible.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Admissible design options between Minimax and Optimal — twostage.admissible","text":"","code":"oo = ph2simon(0.5, 0.7, 0.05, 0.1)   twostage.admissible(oo) #>            r1 n1  r  n   EN(p0)   PET(p0)   qLo   qHi #> Minimax    14 27 32 53 36.11440 0.6494460 0.285 1.000 #> Admissible 12 23 34 57 34.51987 0.6611803 0.112 0.285 #> Optimal    13 24 36 61 34.01324 0.7293719 0.000 0.112"},{"path":"/dev/reference/twostage.inference.html","id":null,"dir":"Reference","previous_headings":"","what":"Inference following a two-stage design for binary response — twostage.inference","title":"Inference following a two-stage design for binary response — twostage.inference","text":"Calculates p-value, UMVUE CI data study using   two stage design response.","code":""},{"path":"/dev/reference/twostage.inference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inference following a two-stage design for binary response — twostage.inference","text":"","code":"twostage.inference(x, r1, n1, n, pu, alpha=0.05)"},{"path":"/dev/reference/twostage.inference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inference following a two-stage design for binary response — twostage.inference","text":"x number responses observed end study r1 first stage threshold declare treatment undesirable n1 first stage sample size n total sample size pu unacceptable response rate (null hypothesis) alpha confidence level. consistency design use     value design. (default 0.05)","code":""},{"path":"/dev/reference/twostage.inference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inference following a two-stage design for binary response — twostage.inference","text":"twostage.inference returns UMVUE (Jung & Kim, 2004), p-value   CI (Koyama & Chen, 2008). CI confidence level 1-2*alpha   one-sided (1-alpha) interval consistent design   obtained changing upper confidence limit (UCL) 1.","code":""},{"path":"/dev/reference/twostage.inference.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Inference following a two-stage design for binary response — twostage.inference","text":"Jung SH Kim KM. (2004). estimation binomial   probability multistage clinical trials. Statistics     Medicine  23, 881-896. Koyama T Chen H. (2008). Proper inference Simon's two-stage   designs. Statistics Medicine 27, 3145-3154.","code":""},{"path":"/dev/news/index.html","id":"clinfun-development-version","dir":"Changelog","previous_headings":"","what":"clinfun (development version)","title":"clinfun (development version)","text":"Added new vignette highlighting clinical trial functions Added github actions R CMD checks","code":""},{"path":"/dev/news/index.html","id":"clinfun-111-03062023","dir":"Changelog","previous_headings":"","what":"clinfun 1.1.1 (03/06/2023)","title":"clinfun 1.1.1 (03/06/2023)","text":"changed class check use inherits instead comparing strings","code":""},{"path":"/dev/news/index.html","id":"new-functionality-1-1-1","dir":"Changelog","previous_headings":"","what":"New Functionality","title":"clinfun 1.1.1 (03/06/2023)","text":"Added .ties option coxphCPE discrete risk score case","code":""},{"path":"/dev/news/index.html","id":"clinfun-110-02222022","dir":"Changelog","previous_headings":"","what":"clinfun 1.1.0 (02/22/2022)","title":"clinfun 1.1.0 (02/22/2022)","text":"CRAN release: 2022-02-22","code":""},{"path":"/dev/news/index.html","id":"new-functionality-1-1-0","dir":"Changelog","previous_headings":"","what":"New Functionality","title":"clinfun 1.1.0 (02/22/2022)","text":"Added added admissible two stage design function Added added futilbdry function sequential futility stopping added 1:r sample allocation gsdesign functions Fixed warnings messages deltaAUC.f","code":""},{"path":"/dev/news/index.html","id":"new-documentation-1-1-0","dir":"Changelog","previous_headings":"","what":"New Documentation","title":"clinfun 1.1.0 (02/22/2022)","text":"Added NEWS.md file track changes package. deposited development version GitHub created {pkgdown} website github actions building site","code":""},{"path":"/dev/news/index.html","id":"clinfun-1015-04132018","dir":"Changelog","previous_headings":"","what":"clinfun 1.0.15 (04/13/2018)","title":"clinfun 1.0.15 (04/13/2018)","text":"CRAN release: 2018-04-13 Added new function deltaAUC test difference area ROC curves nested binary regression models. power.ladesign exact null number combinations small Added help fedesign, ph2simon ph2single functions","code":""},{"path":"/dev/news/index.html","id":"clinfun-1014-04252017","dir":"Changelog","previous_headings":"","what":"clinfun 1.0.14 (04/25/2017)","title":"clinfun 1.0.14 (04/25/2017)","text":"CRAN release: 2017-04-25 added init.c register native routines","code":""},{"path":"/dev/news/index.html","id":"clinfun-1013-11292016","dir":"Changelog","previous_headings":"","what":"clinfun 1.0.13 (11/29/2016)","title":"clinfun 1.0.13 (11/29/2016)","text":"CRAN release: 2016-11-30 permlogrank bug fix - strata option gave error. Names elements survfit.object changed. (strata instead ntimes.strata n vector).","code":""},{"path":"/dev/news/index.html","id":"clinfun-1012-08032016","dir":"Changelog","previous_headings":"","what":"clinfun 1.0.12 (08/03/2016)","title":"clinfun 1.0.12 (08/03/2016)","text":"CRAN release: 2016-10-17 added aucVardiTest compare growth curves","code":""},{"path":"/dev/news/index.html","id":"clinfun-1011-08112015","dir":"Changelog","previous_headings":"","what":"clinfun 1.0.11 (08/11/2015)","title":"clinfun 1.0.11 (08/11/2015)","text":"CRAN release: 2015-08-12 check misssing values jonckheere.test","code":""},{"path":"/dev/news/index.html","id":"clinfun-1010-05182015","dir":"Changelog","previous_headings":"","what":"clinfun 1.0.10 (05/18/2015)","title":"clinfun 1.0.10 (05/18/2015)","text":"CRAN release: 2015-05-18 bug fix pselect; nlen > 3 nlen > 2","code":""},{"path":"/dev/news/index.html","id":"clinfun-109-02242015","dir":"Changelog","previous_headings":"","what":"clinfun 1.0.9 (02/24/2015)","title":"clinfun 1.0.9 (02/24/2015)","text":"CRAN release: 2015-02-24 use requireNamespace remove NOTES functions using survival pkg","code":""},{"path":"/dev/news/index.html","id":"clinfun-108-02192015","dir":"Changelog","previous_headings":"","what":"clinfun 1.0.8 (02/19/2015)","title":"clinfun 1.0.8 (02/19/2015)","text":"fix name swap result mdrr v1.0.7","code":""},{"path":"/dev/news/index.html","id":"clinfun-107-02192015","dir":"Changelog","previous_headings":"","what":"clinfun 1.0.7 (02/19/2015)","title":"clinfun 1.0.7 (02/19/2015)","text":"new function mdrr added calculate minimum detectable difference response rates given average response rate class proportion","code":""},{"path":"/dev/news/index.html","id":"clinfun-106-06102014","dir":"Changelog","previous_headings":"","what":"clinfun 1.0.6 (06/10/2014)","title":"clinfun 1.0.6 (06/10/2014)","text":"CRAN release: 2014-07-22 rare occasions jonckheere.test gave p-value bigger 1. Sometimes 2min(iPVAL, dPVAL, 1) can larger 1. Replace 2min(iPVAL, dPVAL, 0.5) (Thanks Drs. Shterev Owzar Duke).","code":""},{"path":"/dev/news/index.html","id":"clinfun-105-04162013","dir":"Changelog","previous_headings":"","what":"clinfun 1.0.5 (04/16/2013)","title":"clinfun 1.0.5 (04/16/2013)","text":"CRAN release: 2013-04-16 Fixed bound checks","code":""},{"path":"/dev/news/index.html","id":"clinfun-104-01222013","dir":"Changelog","previous_headings":"","what":"clinfun 1.0.4 (01/22/2013)","title":"clinfun 1.0.4 (01/22/2013)","text":"CRAN release: 2013-01-23 Added option calculate continuity corrected sample size function gsdesign.binomial.","code":""},{"path":"/dev/news/index.html","id":"clinfun-103-10152012","dir":"Changelog","previous_headings":"","what":"clinfun 1.0.3 (10/15/2012)","title":"clinfun 1.0.3 (10/15/2012)","text":"CRAN release: 2012-10-15 Fixed two-sided p-value > 1 bug statistic exactly mean. Fixed Rd file address LaTeX warnings.","code":""},{"path":"/dev/news/index.html","id":"clinfun-102-09252012","dir":"Changelog","previous_headings":"","what":"clinfun 1.0.2 (09/25/2012)","title":"clinfun 1.0.2 (09/25/2012)","text":"CRAN release: 2012-09-26 integer overflow djonck Jonckheere-Terpstra statistic. replace pdf calculation using Mark van de Wiel convolution. Create seperate help functions permlogrank jonckheere.test","code":""},{"path":"/dev/news/index.html","id":"clinfun-101-08142012","dir":"Changelog","previous_headings":"","what":"clinfun 1.0.1 (08/14/2012)","title":"clinfun 1.0.1 (08/14/2012)","text":"CRAN release: 2012-08-14 Fix integer overflow n0n1 == 0 roc.curve nnnd == 0 roc.area.test coxphQuantile eliminate times survival probability 0 1 quantile computation.","code":""},{"path":"/dev/news/index.html","id":"clinfun-100-03132012","dir":"Changelog","previous_headings":"","what":"clinfun 1.0.0 (03/13/2012)","title":"clinfun 1.0.0 (03/13/2012)","text":"CRAN release: 2012-03-13 CRAN release: 2012-03-13 toxbdry now entire Pocock O’Brien-Fleming range boundaries. Added references method. Fixed linebreak help coxphERR.","code":""},{"path":"/dev/news/index.html","id":"clinfun-099-01182012","dir":"Changelog","previous_headings":"","what":"clinfun 0.9.9 (01/18/2012)","title":"clinfun 0.9.9 (01/18/2012)","text":"CRAN release: 2012-01-18 Added coxphERR calculate Heller’s explained relative risk. Fixed NaN bug toxbdry priority=“alt” used.","code":""},{"path":"/dev/news/index.html","id":"clinfun-098-09132011","dir":"Changelog","previous_headings":"","what":"clinfun 0.9.8 (09/13/2011)","title":"clinfun 0.9.8 (09/13/2011)","text":"CRAN release: 2011-09-14 fixed bug print.gsdesign binomial case (p1,p2 instead pC,pE) ROC functions now check least one status=0,1","code":""},{"path":"/dev/news/index.html","id":"clinfun-097-04272011","dir":"Changelog","previous_headings":"","what":"clinfun 0.9.7 (04/27/2011)","title":"clinfun 0.9.7 (04/27/2011)","text":"CRAN release: 2011-04-27 fixed fortran code address gfortran-4.6 warnings added ktau faster implementation cor(x, y, method=“k”). NAMESPACE. called using clinfun:::ktau","code":""},{"path":"/dev/news/index.html","id":"clinfun-097-04252011","dir":"Changelog","previous_headings":"","what":"clinfun 0.9.7 (04/25/2011)","title":"clinfun 0.9.7 (04/25/2011)","text":"CRAN release: 2011-04-27 bug fix: roc.area.test integer overflow large nn*nd. use sort function speed roc curve area estimation.","code":""},{"path":"/dev/news/index.html","id":"clinfun-096-03242011","dir":"Changelog","previous_headings":"","what":"clinfun 0.9.6 (03/24/2011)","title":"clinfun 0.9.6 (03/24/2011)","text":"CRAN release: 2011-03-24 bug fix: roc.area.test gave NaN statistic p-value markers identical. Changed 0.","code":""},{"path":"/dev/news/index.html","id":"clinfun-095-03092011","dir":"Changelog","previous_headings":"","what":"clinfun 0.9.5 (03/09/2011)","title":"clinfun 0.9.5 (03/09/2011)","text":"CRAN release: 2011-03-09 bug fix: gsdesign funtions returning sample size / # events.","code":""},{"path":"/dev/news/index.html","id":"clinfun-094-02242011","dir":"Changelog","previous_headings":"","what":"clinfun 0.9.4 (02/24/2011)","title":"clinfun 0.9.4 (02/24/2011)","text":"CRAN release: 2011-02-25 twostage.inference umvue, p-value CI 2 stage design.","code":""},{"path":"/dev/news/index.html","id":"clinfun-093-12062010","dir":"Changelog","previous_headings":"","what":"clinfun 0.9.3 (12/06/2010)","title":"clinfun 0.9.3 (12/06/2010)","text":"CRAN release: 2010-12-07 ph2simon testing whether dim null feasible solution. Replaced nrow == 0 since now possible 0 rows.","code":""},{"path":"/dev/news/index.html","id":"clinfun-092-11052010","dir":"Changelog","previous_headings":"","what":"clinfun 0.9.2 (11/05/2010)","title":"clinfun 0.9.2 (11/05/2010)","text":"CRAN release: 2010-11-10 Added functions compute plot empirical ROC curve.","code":""},{"path":"/dev/news/index.html","id":"clinfun-091-11032010","dir":"Changelog","previous_headings":"","what":"clinfun 0.9.1 (11/03/2010)","title":"clinfun 0.9.1 (11/03/2010)","text":"CRAN release: 2010-11-05 Added functions area permutation tests compare ROC. Checks min.diff greater 0 pselect.","code":""},{"path":"/dev/news/index.html","id":"clinfun-090-11012010","dir":"Changelog","previous_headings":"","what":"clinfun 0.9.0 (11/01/2010)","title":"clinfun 0.9.0 (11/01/2010)","text":"CRAN release: 2010-11-03 Added non-binding futility boundary gsdesign","code":""},{"path":"/dev/news/index.html","id":"clinfun-0810-04162010","dir":"Changelog","previous_headings":"","what":"clinfun 0.8.10 (04/16/2010)","title":"clinfun 0.8.10 (04/16/2010)","text":"CRAN release: 2010-04-16 variable names returned data.frame coxphQuantile examples coxphQuantile & coxphCPE use status==2","code":""},{"path":"/dev/news/index.html","id":"clinfun-089-04092010","dir":"Changelog","previous_headings":"","what":"clinfun 0.8.9 (04/09/2010)","title":"clinfun 0.8.9 (04/09/2010)","text":"CRAN release: 2010-04-10 check R# clinfun coxphCPE works # clinfun (see 0.8.9)","code":""},{"path":"/dev/news/index.html","id":"clinfun-088-04072010","dir":"Changelog","previous_headings":"","what":"clinfun 0.8.8 (04/07/2010)","title":"clinfun 0.8.8 (04/07/2010)","text":"CRAN release: 2010-04-08 Change coxphCPE reflect fact model.matrix.coxph doesn’t intercept term.","code":""},{"path":"/dev/news/index.html","id":"clinfun-088-02252010","dir":"Changelog","previous_headings":"","what":"clinfun 0.8.8 (02/25/2010)","title":"clinfun 0.8.8 (02/25/2010)","text":"CRAN release: 2010-04-08 Added function or2pcase","code":""},{"path":"/dev/news/index.html","id":"clinfun-087-11202009","dir":"Changelog","previous_headings":"","what":"clinfun 0.8.7 (11/20/2009)","title":"clinfun 0.8.7 (11/20/2009)","text":"CRAN release: 2009-11-22 Fixed 0/0 bug revised pselect","code":""},{"path":"/dev/news/index.html","id":"clinfun-086-11172009","dir":"Changelog","previous_headings":"","what":"clinfun 0.8.6 (11/17/2009)","title":"clinfun 0.8.6 (11/17/2009)","text":"CRAN release: 2009-11-19 Changed Venkat’s affiliation MSKCC. Fixed pselect calculate selection probability correctly one treatment exceeds min.resp threshold.","code":""},{"path":"/dev/news/index.html","id":"clinfun-085-07102009","dir":"Changelog","previous_headings":"","what":"clinfun 0.8.5 (07/10/2009)","title":"clinfun 0.8.5 (07/10/2009)","text":"CRAN release: 2009-07-18 Changed Jonckheere-Terpstra statistic large value indicative increasing group locations small decreasing. Function warns p-value based approximation tied data.","code":""},{"path":"/dev/news/index.html","id":"clinfun-084-12022008","dir":"Changelog","previous_headings":"","what":"clinfun 0.8.4 (12/02/2008)","title":"clinfun 0.8.4 (12/02/2008)","text":"CRAN release: 2008-12-02 Added functionality pselect. can unequal sample size case two treatments. min.diff can specified rate instead number responses. Output element names changed descriptive.","code":""},{"path":"/dev/news/index.html","id":"clinfun-083-11182008--09182008","dir":"Changelog","previous_headings":"","what":"clinfun 0.8.3 (11/18/2008 & 09/18/2008)","title":"clinfun 0.8.3 (11/18/2008 & 09/18/2008)","text":"CRAN release: 2008-11-18 Fixed bug CPS.ssize. call inside used fixed alpha, power & r. Fixed bug approximate one-sided p-value Jonckheere test. wrong tail used.","code":""},{"path":"/dev/news/index.html","id":"clinfun-082-06202008","dir":"Changelog","previous_headings":"","what":"clinfun 0.8.2 (06/20/2008)","title":"clinfun 0.8.2 (06/20/2008)","text":"CRAN release: 2008-07-01 toxbdry allows error threshold prioritize sample size small satisfied.","code":""},{"path":"/dev/news/index.html","id":"clinfun-081-06172008","dir":"Changelog","previous_headings":"","what":"clinfun 0.8.1 (06/17/2008)","title":"clinfun 0.8.1 (06/17/2008)","text":"CRAN release: 2008-06-17 Fixed gsdesign allow fixed sample designs. Help file fixed.","code":""},{"path":"/dev/news/index.html","id":"clinfun-080-05232008","dir":"Changelog","previous_headings":"","what":"clinfun 0.8.0 (05/23/2008)","title":"clinfun 0.8.0 (05/23/2008)","text":"CRAN release: 2008-05-23 New # clinfun one new function power.lehmann.design","code":""}]
